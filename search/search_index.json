{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HDZero","text":"<p>Welcome to the un-official documentation Wiki for HDZero, the high definition digital FPV system with near ZERO latency.</p> <p>Get Started</p>"},{"location":"#where-do-i-find-out-more-about-hdzero","title":"Where do I find out more about HDZero?","text":"<p>HDZero is a community driven project. Join the community to get the latest news, updates and support.</p> <ul> <li>Facebook</li> <li>RC Groups</li> <li>Discord</li> <li>GitHub</li> </ul>"},{"location":"3d-prints/","title":"3D Prints","text":"<p>There are an increasing number of 3D prints available for HDZero. This page aims to document them.</p>"},{"location":"FAQ/","title":"Frequenty Asked Questions","text":"Why HDZero?"},{"location":"community-mods/","title":"Community Mods","text":"<p>This page aims to document community mods for the HDZero goggles and system generally.</p>"},{"location":"community-mods/#hdzero-goggle-mods","title":"HDZero Goggle Mods","text":"<ul> <li>Paul Kendall's mod to allow the goggles control some aspects of rapidFIRE, Steadyview, Steadyview X, TBS Fusion or any other module that allows selecting 1 of 8 channels with the buttons on other goggles.</li> </ul>"},{"location":"firmware_update/","title":"Updating an HDZero VTX","text":"<p>The firmware files can be downloaded from here.</p>"},{"location":"firmware_update/#firmware","title":"Firmware","text":"<p>Each revision contains firmware for all VTX and VRX. The revision number is formatted as  rev_ddmmyyy.zip, where \"ddmmyyy\" indicates the date of release. </p> <p></p> <p>Contents of each revision:</p> <p></p>"},{"location":"firmware_update/#vtx-update-guide","title":"VTX Update Guide","text":"<p>The zip file for each VTX contains HDZERO_TX.bin. </p>"},{"location":"firmware_update/#steps-to-update-vtx-firmware","title":"Steps to Update VTX firmware","text":"<ol> <li>Format your microSD card (Choose FAT32 and Allocation Unit size to  4096 bytes)</li> <li>Power off your VRX if it is already on. </li> <li>Copy the HDZERO_TX.bin file from corresponding VTX zip file onto your microSD card, and  insert the microSD card into the VRX module.</li> <li>Connect one end of your Firmware Update Cable to the VRX and the other end to the VTX you want to update.</li> <li>Make sure to connect the mini-HDMI cable to your VRX and to your goggles/screen to see the firmware update progress.</li> <li>Power on the VRX module.</li> <li>If you get the \"Wait to Connect VTX\" or \"Check Cable...\" message, make sure that you did  step 4 right.</li> <li>If you get the \"Firmware update failed\" message, repeat the procedure from step 1. </li> <li>If you get the \"Firmware update successful\" message, you are set.</li> <li>HDZERO_TX.bin file is automatically removed after a successful update.</li> </ol> <p>Handy Tip: If you create an empty file named \"DONOTREMOVE.txt\" in the root directory of the microSD card, HDZERO_TX.bin will not be removed after each successful update. This is convenient when you update several VTXes in succession.</p>"},{"location":"firmware_update/#vrxgoggles-update-guide","title":"VRX/Goggles Update Guide","text":""},{"location":"firmware_update/#steps-to-update-vtx-firmware_1","title":"Steps to Update VTX firmware","text":"<ol> <li>Disconnect the cable that connects the VTX to the VRX module (or to your glasses) if it is still connected.</li> <li>Unzip the contents of the appropriate zip file (starting with RX5.1 or ScoutHD) to your microSD card.</li> <li>Make sure to connect the mini-HDMI cable to your VRX and to your goggles/screen to see the firmware update progress.</li> <li>Turn on the VRX module, and wait for the \"Success\" message to be displayed.</li> </ol> <p>The firmware will be automatically deleted from the microSD card after the update.</p> <p>Note: Do not turn off your VRX module (or goggles) while the firmware update is still in progress. Make sure that the message \"Update Completed\" is displayed, otherwise the VRX/goggles will not boot up correctly.</p>"},{"location":"products/","title":"Products","text":""},{"location":"products/#divimath","title":"Divimath","text":""},{"location":"products/#hdzero-freestyle-vtx","title":"HDZero Freestyle VTX","text":"<p>The HDZero Freestyle VTX is a digital HD 720p 60fps 5.8GHZ video transmitter which is compatible with video receivers equipped with HDZero Technology. Thanks to its higher power output capabilities, this VTX is suitable for Freestyle and Long-Range applications. Although the VTX integrates a surge protection circuit, a capacitor with at least capacity of 450\u00b5F must be connected parallel to the power supply to smooth unwanted voltage spikes. The VTX is bundled with a BEC that converts 2S-6S to fixed 5.8V with maximum of 5A output current. The VTX also comes with an RHCP antenna which has a U.FL connector.</p> <pre><code>- Specifications -\n\nTransmitter Power   :   25mW, 200mW, 500mW, 1W\nWeight              :   28g\nDimensions          :   40x42x10mm\nMounting Pattern    :   30x30 mm with M3 holes\nAntenna Interface   :   Secured U.FL \nSmartAudio          :   Yes\nInput Voltage       :   7-17V (2S-4S)\nPower Consumption   :   6-15W\n</code></pre>"},{"location":"products/#hdzero-race-v2-vtx","title":"HDZero Race V2 VTX","text":"<p>The HDZero Race V2 VTX is a digital HD 720p 60fps 5.8GHZ video transmitter which is compatible with video receivers equipped with HDZero Technology. Thanks to its compact design and light-weight, this VTX is a perfect match for FPV racers.</p> <pre><code>- Specifications -\n\nTransmitter Power   :   25mW, 200mW\nWeight              :   6.2g\nDimensions          :   34x34x5mm\nMounting Pattern    :   20x20mm with M4 to M3 gummies\nAntenna Interface   :   Secured U.FL \nSmartAudio          :   Yes\nInput Voltage       :   7-26V (2S-6S)\nPower Consumption   :   5-5.8W\n</code></pre>"},{"location":"products/#hdzero-whoop-vtx","title":"HDZero Whoop VTX","text":"<p>The HDZero Whoop VTX is a digital HD 720p 60fps 5.8GHZ video transmitter which is compatible with video receivers equipped with HDZero Technology. Thanks to its compact design and light-weight, this VTX is a perfect match for whoop and tootpick style FPV drone builds.</p> <pre><code>- Specifications -\n\nTransmitter Power   :   25mW, 200mW\nWeight              :   5.4g\nDimensions          :   32.5x32.5x7mm\nMounting Pattern    :   25.5x25.5mm with M2 holes\nAntenna Interface   :   U.FL \nSmartAudio          :   No\nInput Voltage       :   7-26V (2S-6S)\nPower Consumption   :   5-5.8W\n</code></pre>"},{"location":"products/#happymodel","title":"Happymodel","text":""},{"location":"products/#hdzero-happymodel-mobula7-whoop","title":"HDZero Happymodel Mobula7 Whoop","text":""},{"location":"products/#runcam","title":"Runcam","text":""},{"location":"products/#hdzero-runcam-micro-v2-camera","title":"HDZero Runcam Micro V2 Camera","text":"<p>HDZero Runcam Micro V2 camera is a 4:3 and 16:9 selectable high definition 720p 60fps camera designed for HDZero Technology supported video transmitters. It supports the camera menu for brightness, contrast, saturation, HV flip, and other camera settings. Thanks to its ultra-high sensitive 1/2 inch sensor, the camera has an excellent low-light performance.</p> <pre><code>- Specifications -\n\nAspect Ratio        :   4:3 / 16:9 Switchable\nWeight              :   8.5g \nDimensions          :   19x19x21mm \nSensor Size         :   1/2 Inch\nLuminance           :   10650 mV/Lux-sec\nFOV                 :   D:155\u00b0 H:122\u00b0 V:89\u00b0 (4:3) , D:145\u00b0 H:122\u00b0 V:67\u00b0 (16:9) \nShutter             :   Rolling Shutter\nInput Voltage       :   3.3V \nPower Consumption   :   0.5W\n</code></pre>"},{"location":"products/#hdzero-runcam-nano-camera","title":"HDZero Runcam Nano Camera","text":"<p>HDZero Runcam Nano camera is a high definition 720p 60fps camera designed for HDZero Technology supported video transmitters. It supports the camera menu for brightness, contrast,and other camera settings. Thanks to its compact and relatively small design, this camera is a perfect match for tiny builds such as whoop and toothpick style FPV drones.     - Specifications -</p> <pre><code>Aspect Ratio        :   16:9 \nWeight              :   4.3g \nDimensions          :   14x16x21mm \nSensor Size         :   1/2 Inch (!!remark i think this is wrong)\nFOV                 :   D:150\u00b0 H:127\u00b0 V:69\u00b0 \nShutter             :   Rolling Shutter\nInput Voltage       :   3.3V \nPower Consumption   :   0.5W\n</code></pre>"},{"location":"products/#hdzero-runcam-micro-v1-camera-discontinued","title":"HDZero Runcam Micro V1 Camera (Discontinued)","text":"<pre><code>- Specifications -\n\nAspect Ratio        :   16:9 \nWeight              :   6.5g \nDimensions          :   19x19x17mm\nFOV                 :   D:160\u00b0 (!!remark might be wrong)\nShutter             :   Rolling Shutter\nInput Voltage       :   3.3V\n</code></pre>"},{"location":"products/#runcam-nano-hd-camera","title":"Runcam Nano HD Camera","text":""},{"location":"products/#fat-shark","title":"Fat Shark","text":""},{"location":"products/#shark-byte-rx5-vrx-discontinued","title":"Shark Byte RX5 VRX (Discontinued)","text":"<p>Shark Byte RX5 is a digital HD 720p 60fps video receiver module which is compatible with video transmitters equipped with HDZero Technology. The receiver module has a mini-HDMI port. Thanks to this port, the video receiver can be used with any HDMI display or FPV goggles with HDMI input. The receiver module can be mounted on Fat Shark FPV goggles with the included fan plate but also can be mounted on other goggles with 3rd party 3D printed adaptors.</p>"},{"location":"products/#sb-tx5s1-vtx-discontinued","title":"SB TX5S.1 VTX (Discontinued)","text":""},{"location":"products/#sb-tx5m1-vtx-discontinued","title":"SB TX5M.1 VTX (Discontinued)","text":""},{"location":"products/#sb-tx5r1-vtx-discontinued","title":"SB TX5R.1 VTX (Discontinued)","text":""},{"location":"products/#scout-hd-fpv-goggles","title":"Scout HD FPV Goggles","text":""},{"location":"products/#foxeer","title":"Foxeer","text":""},{"location":"products/#digisight-v1-camera-discontinued","title":"Digisight V1 Camera (Discontinued)","text":""},{"location":"products/#digisight-v2-camera","title":"Digisight V2 Camera","text":""},{"location":"products/#digisight-v3-camera","title":"Digisight V3 Camera","text":""},{"location":"products/#non-implemented","title":"Non-implemented","text":""},{"location":"products/#foxeer-revo-vtx","title":"Foxeer Revo VTX","text":""},{"location":"quick-start/getting-started/","title":"Getting Started","text":""},{"location":"quick-start/getting-started/#welcome-to-the-quick-start-guide","title":"Welcome to the Quick Start Guide","text":""},{"location":"setting-up/overview/","title":"Overview","text":"<p>Use the navigation links on the left to find out how to set up different aspects of HDZero, whether it be Video Transmitter (VTX), Video Receiver (VRX) Module, Goggles or setting up a flight controller with HDZero.</p>"},{"location":"setting-up/flight-controller/betaflight/","title":"Betaflight Setup","text":""},{"location":"setting-up/flight-controller/betaflight/#canvas-mode","title":"Canvas Mode","text":"<p>Currently only Betaflight supports msp_displayport settings in the CLI. For INAV please refer to the respective guide in this wiki. Please make sure that the FC firmware version is the latest  version of BetaFlight. The current (2021/03/12) is version 4.2.8. For a better experience, please wait for the release of version 4.3.0.</p> <pre><code>1. Connect VTX UART to FC\u2019s serial port, such as UART3.\n\n2. In the Ports interface, turn on the MSP function corresponding to the Identifier (UART3), the baud rate is 115200, Save and Reboot.\n\n3. After opening the CLI, make the following settings:\n\nA.  Set osd_device to msp: \nset osd_displayport_device = MSP\nB.  Specify the serial port of msp_displayport as 2 (the number in this place should be the serial port number minus 1): \nset displayport_msp_serial = 2\nC. Save and exit: \nsave\nThe setup is complete.\n</code></pre>"},{"location":"setting-up/flight-controller/inav/","title":"INAV","text":""},{"location":"setting-up/flight-controller/inav/#inav-msp-displayport","title":"INAV MSP DISPLAYPORT","text":"<p>INAV supports MSP Displayport from version 4.1.</p> <p>To setup do the following:</p> <pre><code>1. Connect VTX UART to FC\u2019s serial port, such as UART2.\n\n2. In the Ports tab, turn on HDZERO VTX from the Peripherals drop-down \nfor the UART the VTX is connected to. Save and reboot.\n\n3. In the Configuration tab ensure OSD is switched on. Save and reboot\n\n4. In the OSD tab select HD as the OSD type. Adjust the OSD to your \npreference then save. The setup is now complete.\n</code></pre>"},{"location":"setting-up/goggles/hdzero-goggles/","title":"HDZero Goggles","text":""},{"location":"setting-up/goggles/hdzero-goggles/#wireless-head-tracker","title":"Wireless Head Tracker","text":"<p>Using the ELRS backpack in the goggles, you can use the HDZero goggles as a wireless head tracker. This will allow you to control the pan and tilt of your camera using the goggles.</p> <p>Warning</p> <p>This feature is still in development and may not work as expected. Please report any issues you have to the developers.</p> <p>You need version 1.3 of the backpack firmware on the TX module backpack and the goggles backpack. You need to flash the <code>master</code> branch of ELRS to the TX module (until ELRS v3.3 is released). Then in the Lua script enter the Backpack menu, make sure Backpack in On, HT Enable is On or an Aux channel if you want to enable it via a switch. And finally set HT Start Chan to a aux channel for Pan (tilt and roll will then be chan+1 and chan+2 respectively). To get the smoothest operation you will want to be running 333 Full or 100 Full. Also the switch mode you choose will determine how many channels are available to use and therefore which aux channels you can use for the pan/tilt/roll (see Switch Config in the ELRS documentation)</p> <p>On the goggles you need to enter the Head tracking menu and turn the Tracking option on.</p>"},{"location":"setting-up/goggles/hdzero-goggles/#analog-modules","title":"Analog Modules","text":""},{"location":"setting-up/goggles/hdzero-goggles/#immersionrc-rapidfire","title":"ImmersionRC RapidFire","text":"<p>The ImmersionRC RapidFire is considered by some to be the best analog module on the market. It is a dual receiver module that uses advanced algorithms to combine the best parts of two analog signals into one. Using Paul Kendall's mod, it is possible to control the RapidFire module with the HDZero goggles. This will allow you to use the ELRS VTX Administrator functionality or the jog dial on the goggles to change channels and change between rapidFIRE in the goggles menu.</p> <p>ImmersionRC Product Page</p>"},{"location":"setting-up/goggles/hdzero-goggles/#tbs-fusion","title":"TBS Fusion","text":"<p>A popular analog module for goggles with a Fatshark compatible module bay is the TBS Fusion. Similar to the ImmersionRC Rapidfire, it uses \"active video fusion\" to reduce image breakup and increase usable video range. While it has a Wifi backpack, out of the box it does not work with the ELRS VTX Administrator functionality. However, it is possible to flash the module with ELRS backpack firmware, which will allow you to use the Fusion with ELRS. You can also use Paul Kendall's mod to switch between the eight configured favorite channels on the Fusion using the jog dial on the goggles.</p> <p>TBS Product Page</p>"},{"location":"setting-up/goggles/hdzero-goggles/#elrs-backpack-flashing","title":"ELRS Backpack Flashing","text":"<p>Info</p> <p>You will need a FTDI or similar USB UART/serial adapter in order to flash the Fusion. You can find them on Amazon or eBay for a few dollars if you do not have one already.</p> <p>Warning</p> <p>This process requires you to lift the LCD screen on the Fusion. This is not a difficult process, but you should be careful not to damage the ribbon cable or the screen itself. The easiest way to do this is by powering up the module by USB, letting it run for a minute or two until it has warmed up, thus softening the adhesive. You should now be able to gently remove the display, flip it over, and now have access to the connection points underneath.</p> <p>Wire up your TBS Fusion as shown below: </p> <p></p> <p>Power the module using a seperate USB connection, created a ground bridge between pins 15/18 (red) and the FTDI GND (purple), and connected the RX and TX respectively via FTDI. Put the module into Bootloader by holding the button to the left and powered it up. The screen should now show \"wifi unbrick\".</p> <p>Then, use the ELRS configurator to build and install the backpack directly onto the module (UART method). After it was successful, disconnect all wires and put it back together.</p> <p>You should be able to get the Fusion to start up the ELRS wifi page by using the ELRS Lua transmitter script (<code>Wifi Connectivity -&gt; Enable VRx WiFI</code>). The Fusion should then show the wireless signal as no longer broken on its OSD. You should also be able to view the elrs_vrx.local page (if you gave it your home wifi credentials or are connected to its ELRS hotspot).</p> <p>Note</p> <p>You can repeat the last section in the future to update the fusion backpack wirelessly.</p> <p>The last step is to enable everything on the Fusion. Goto <code>Settings -&gt; VTX Sync -&gt; \"Follow\"</code>, and you should be good to go!</p>"}]}